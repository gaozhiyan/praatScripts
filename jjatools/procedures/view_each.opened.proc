# View each selected Sound (and TextGrid) object in turn
#
# The script allows for easy navigation between selected Sound
# objects, which is particularly useful when comparing specific
# features in each of them. If an equal number of TextGrid and
# Sound objects have been selected, they will be paired by name
# and viewed in unison.
#
# Written by Jose J. Atria (October 14, 2012)
# Last revision: July 10, 2014)
#
# This script is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# A copy of the GNU General Public License is available at
# <http://www.gnu.org/licenses/>.

include ../../plugin_jjatools/procedures/selection.proc

# Procedure override is called after iteration is broken from pause menu
procedure viewEach_cleanUp ()
  @restoreSavedSelection(viewEachOpened.selection)
  removeObject: viewEachOpened.selection
  if viewEachOpened.paired
    removeObject: viewEachOpened.base_selection, viewEachOpened.pair_selection
  endif
  viewEachOpened.i = viewEachOpened.n + 1
endproc

include ../../plugin_jjatools/procedures/view_each.proc

procedure viewEachOpened ()

  # Generate a table with object types and number of selected
  # objects of each type
  @saveSelectionTable()
  .selection = saveSelectionTable.table
  selectObject: .selection
  Rename: "original"
  @restoreSavedSelection(.selection)

  @checkSelection()
  .object_table = checkSelection.table
  selectObject: .object_table
  Rename: "objects"
  @restoreSavedSelection(.selection)

  .n = numberOfSelected()

  ## Paired object types
  selectObject: .object_table

  # Check if Sound and TextGrid objects are the only types
  # and if they are in the same number, for pairing.
  .paired = 0
  .total_types = Get number of rows
  if .total_types = 2
    @countObjects(.object_table, "Sound")
    .sounds    = countObjects.n
    @countObjects(.object_table, "TextGrid")
    .textgrids = countObjects.n
    if .sounds = .textgrids
      .paired = 1
      @restoreSavedSelection(.selection)
      @refineToType("Sound")
      @saveSelectionTable()
      .sounds = saveSelectionTable.table
      selectObject: .sounds
      Rename: "sounds"

      @restoreSavedSelection(.selection)
      @refineToType("TextGrid")
      @saveSelectionTable()
      .textgrids = saveSelectionTable.table
      selectObject: .textgrids
      Rename: "textgrids"

      selectObject: .sounds
      .n = Get number of rows
    endif
  endif

  # No more use for object type table
  removeObject: .object_table

  if .paired
    .base_selection = .sounds
    .pair_selection = .textgrids
  else
    .base_selection = .selection
  endif

  .i = 1
  while .i <= .n
    # We use the selection table to iterate through the selection
    selectObject: .base_selection
    .base       = Get value: .i, "id"

    if .paired
      selectObject: .pair_selection
      .pair       = Get value: .i, "id"
    else
      .pair = undefined
    endif

    @viewEach(.base, .pair, .i, .n)

    if viewEach_pause.button = 1
      # Pressed stop
      @viewEach_cleanUp()
    elsif viewEach_pause.button = 2 and .i > 1
      # Pressed back
      .i -= 1
    else
      if .i = .n
        @viewEach_cleanUp()
      else
        .i += 1
      endif
    endif
  endwhile
endproc
